@model HeyHotel.ViewModels.OrdersListViewModel
@{ 
    int MinTotal = 0;
    int MaxTotal = 0;
    int MinFloor = 0;
    int MaxFloor = 0;
    if(Model.Orders.Count > 0)
    {
        MinTotal = ((int)Model.Orders.Select(el => el.Sum).Min()) - 1;
        MaxTotal = ((int)Model.Orders.Select(el => el.Sum).Max()) + 1;
        MinFloor = ((int)Model.Orders.Select(el => el.Room.Floor).Min()) - 1;
        MaxFloor = ((int)Model.Orders.Select(el => el.Room.Floor).Max()) + 1;
    }
}


<div class="FiltersDiv">
    <form method="get" asp-controller="Manager" asp-action="OrdersList">
        <div>
            Filters:
        </div>
        <input type="hidden" name="sortOrder" value="@ViewBag.LastValueSortOrder">
        <div>
            Hotel name: <input type="text" value="@ViewBag.LVHotelName" name="HotelName" />
        </div>
        <div>
            User Email: <input type="text" value="@ViewBag.LVFEmail" name="Email" />
        </div>
        <div>
            Floor: <input type="number" min="@MinFloor" max="@MaxFloor" value="@ViewBag.LVFloor" name="Floor" />
        </div>
        <div>
            Minimal total: <input type="number" value="@ViewBag.LVMinTotal" min="@MinTotal" max="@MaxTotal" name="MinTotal" />
        </div>
        <div>
            Maximal total: <input type="number" value="@ViewBag.LVMaxTotal" min="@MinTotal" max="@MaxTotal" name="MaxTotal" />
        </div>
        <div>
            <input type="submit" value="Search" />
        </div>
    </form>
    <form method="get" asp-controller="Manager" asp-action="OrdersList">
        <input type="hidden" name="sortOrder" value="@ViewBag.LastValueSortOrder">
        <div>
            <input type="submit" value="Clear Filters" />
        </div>
    </form>
</div>

<table class="ItemListTable">
    <tr>
        <td>Id</td>
        <td><a asp-action="OrdersList" asp-controller="Manager" asp-route-sortOrder="@ViewBag.HotelNameSortParm">Hotel Name</a></td> 
        <td><a asp-action="OrdersList" asp-controller="Manager" asp-route-sortOrder="@ViewBag.HotelLocationSortParm">Hotel Location</a></td>
        <td>User Email</td>
        <td><a asp-action="OrdersList" asp-controller="Manager" asp-route-sortOrder="@ViewBag.RoomNumberSortParm">Room number</a></td>
        <td>Room floor</td>
        <td><a asp-action="OrdersList" asp-controller="Manager" asp-route-sortOrder="@ViewBag.TotalSortParm">Total</a></td>
        <td><a asp-action="OrdersList" asp-controller="Manager" asp-route-sortOrder="@ViewBag.IsPayedSortParm">Is Payed</a></td>
        <td><a asp-action="OrdersList" asp-controller="Manager" asp-route-sortOrder="@ViewBag.IsClosedSortParm">Is Closed</a></td>
    </tr>
    @foreach(Order order in Model.Orders)
            {
                <tr>
                    <td>@order.Id</td>
                    <td>@order.Room.Hotel.Name</td>
                    <td>@order.Room.Hotel.Location</td>
                    <td>@Model.FindUserById(order.UserId).Email</td>
                    <td>@order.Room.RoomNumber</td>
                    <td>@order.Room.Floor</td>
                    <td>@order.Sum$</td>
                    <td>@order.IsPayed</td>
                    <td>@order.IsClosed</td>
                    <td class="ActionButton"><a  asp-action="EditOrder" asp-controller="Order" asp-route-OrderId="@order.Id">Edit</a></td>
                    @if (order.IsClosed)
                    {
                        <td class="DisabledButton">Close</td>
                    }
                    else
                    {
                        <td class="ActionButton"><a asp-action="CloseOrderForManager" asp-controller="Order" asp-route-OrderId="@order.Id">Close</a></td>
                    }
                    <td class="ActionButton"><a asp-action="DeleteOrder" asp-controller="Order" asp-route-OrderId="@order.Id">Delete</a></td>
                </tr>
            }

</table>